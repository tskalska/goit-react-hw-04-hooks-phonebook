{"version":3,"sources":["components/form/Form.jsx","components/filter/Filter.jsx","components/contactList/ContactList.jsx","App.js","index.js","components/form/Form.module.css"],"names":["Form","props","useState","newName","setNewName","newNumber","setNewNumber","handleChange","event","target","name","value","onSubmit","preventDefault","reset","className","styles","form","type","pattern","title","required","onChange","formInput","formButton","Filter","handleFilterChange","ContactList","contacts","filterX","deleteButtonHandler","normalizedFilter","toLowerCase","filteredList","filter","contact","includes","map","number","onClick","uuidv4","App","JSON","parse","window","localStorage","getItem","setContacts","filterForm","setFilter","useEffect","setItem","stringify","data","some","alert","currentTarget","newContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qSAGe,SAASA,EAAMC,GAC7B,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEOC,EAAe,SAACC,GACpB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAEb,OAAQD,GACN,IAAK,OACHN,EAAWO,GACX,MAEF,IAAK,SACHL,EAAaK,GACb,MAEF,QAAS,SAab,OACE,8BACE,uBAAMC,SAVW,SAACJ,GACpBA,EAAMK,iBACNZ,EAAMW,SAAS,CAACT,UAAQE,cACxBD,EAAW,IACXE,EAAa,IACbE,EAAMC,OAAOK,SAKmBC,UAAWC,IAAOC,KAAhD,UACE,0CAEE,uBACEC,KAAK,OACLR,KAAK,OACLS,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUf,EACVQ,UAAaC,IAAOO,eAGxB,4CAEE,uBACEL,KAAK,MACLR,KAAK,SACLS,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUf,EACVQ,UAAaC,IAAOO,eAIxB,wBAAQR,UAAWC,IAAOQ,WAA1B,8BC1DO,SAASC,EAAT,GAAsC,IAArBC,EAAoB,EAApBA,mBAC9B,OAAQ,gCACN,wDACA,gCACE,uBACER,KAAK,OACLI,SAAUI,S,YCLH,SAASC,EAAT,GAAgE,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,oBAEjDC,EAAmBF,EAAQG,cAC3BC,EAAeL,EAASM,QAAO,SAAAC,GAAO,OAAIA,EAAQzB,KAAKsB,cAAcI,SAASL,MAGpF,OACA,gCACE,4CAAmB,uBACnB,6BAAKE,EAAaI,KAAI,SAAAF,GAAO,OAC3B,+BACGA,EAAQzB,KADX,MACoByB,EAAQG,OAC1B,wBAAQpB,KAAK,SAASqB,QAAU,kBAAMT,EAAoBK,EAAQzB,OAAlE,sBAFO8B,uBCPA,SAASC,IAAO,IAAD,EAC5B,EAAgCvC,mBAAQ,UACtCwC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,iBADD,QACc,IADtD,mBAAOlB,EAAP,KAAiBmB,EAAjB,KAGA,EAAgC7C,mBAAS,IAAzC,mBAAO8C,EAAP,KAAmBC,EAAnB,KAoBAC,qBAAU,WACRL,aAAaM,QAAQ,QAAST,KAAKU,UAAUxB,MAC5C,CAACA,IAOJ,OACE,gCACE,2CAAkB,uBAClB,cAAC5B,EAAD,CACEY,SA/BoB,SAAAyC,GACxB,IAAMtB,EAAmBsB,EAAKlD,QAAQ6B,cAElCJ,EAAS0B,MAAK,SAAAnB,GAAO,OAAIA,EAAQzB,KAAKsB,gBAAgBD,KACxDwB,MAAM,YAAD,OAAaF,EAAKlD,QAAlB,qBAIP4C,EAAW,sBAAMnB,GAAN,CAAgB,CACzBlB,KAAM2C,EAAKlD,QACXmC,OAAQe,EAAKhD,iBAwBb,cAACoB,EAAD,CACEC,mBArBqB,SAAClB,GAC1ByC,EAAWzC,EAAMgD,cAAc7C,UAuB7B,cAACgB,EAAD,CACEC,SAAUA,EACVC,QAASmB,EACTlB,oBAnBsB,SAAApB,GAC1B,IAAM+C,EAAc7B,EAASM,QAAO,SAAAC,GAAO,OAAIA,EAAQzB,OAASA,KAChEqC,EAAaU,SC/BjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,WAAa,4B","file":"static/js/main.1557803e.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport styles from './Form.module.css';\r\n\r\nexport default function Form (props) {\r\n const [newName,setNewName]=useState('');\r\n const [newNumber,setNewNumber]=useState('');\r\n\r\n  const handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setNewName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNewNumber(value);\r\n        break;\r\n        \r\n      default: return;\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onSubmit({newName,newNumber});\r\n    setNewName('');\r\n    setNewNumber(''); \r\n    event.target.reset();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            className = {styles.formInput}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input \r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            className = {styles.formInput}\r\n          >\r\n          </input>\r\n        </label>\r\n        <button className={styles.formButton}>Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Filter({handleFilterChange}){\r\n  return (<div>\r\n    <span>Find contact by name</span>\r\n    <label>\r\n      <input \r\n        type=\"text\"\r\n        onChange={handleFilterChange}>  \r\n      </input>\r\n    </label>\r\n  </div>)\r\n}\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function ContactList ({contacts, filterX, deleteButtonHandler}){\r\n\r\n  const normalizedFilter = filterX.toLowerCase()\r\n  const filteredList = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n\r\n\r\n  return ( \r\n  <div>\r\n    <h2>Contacts: </h2><br />\r\n    <ul>{filteredList.map(contact =>\r\n      <li key={uuidv4()}>\r\n        {contact.name} : {contact.number}\r\n        <button type=\"button\" onClick={ () => deleteButtonHandler(contact.name) }>\r\n          Delete\r\n        </button>\r\n      </li>\r\n      )}\r\n    </ul>\r\n  </div>)\r\n}\r\n","import {useState, useEffect} from 'react';\nimport './App.css'; \nimport Form from './components/form/Form'\nimport Filter from './components/filter/Filter';\nimport ContactList from './components/contactList/ContactList';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('items')) ?? ''\n  );\n  const [filterForm, setFilter] = useState('');\n\n  const formSubmitHandler = data => {\n    const normalizedFilter = data.newName.toLowerCase();\n    \n    if (contacts.some(contact => contact.name.toLowerCase()===normalizedFilter)){\n      alert(`The name ${data.newName} already exists.`)\n      return;\n    }\n\n    setContacts ([...contacts, {\n      name: data.newName,\n      number: data.newNumber,\n    }])\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter (event.currentTarget.value) \n  }\n\n  useEffect(()=> {\n    localStorage.setItem('items', JSON.stringify(contacts));\n  }, [contacts])\n\n  const deleteButtonHandler = name => {\n    const newContacts = contacts.filter(contact => contact.name !== name);\n    setContacts (newContacts)\n  } \n\n  return (\n    <div>\n      <h1>Phonebook</h1><br/>\n      <Form\n        onSubmit={ formSubmitHandler }\n      />\n\n      <Filter\n        handleFilterChange={handleFilterChange}\n      />\n      \n      <ContactList\n        contacts={contacts}\n        filterX={filterForm}\n        deleteButtonHandler={deleteButtonHandler}\n      />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__ay2_I\",\"formInput\":\"Form_formInput__2nB_h\",\"formButton\":\"Form_formButton__1YNUm\"};"],"sourceRoot":""}